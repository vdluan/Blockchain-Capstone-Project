// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier=artifacts.require("SquareVerifier");
var proof=require("../../zokrates/code/square/proof.json");

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps

    
// Test verification with incorrect proof


contract('TestSquareVerifier Square', accounts => {

   
    describe('Test SquareVerifier', function () {
        beforeEach(async function () { 
            this.contract = await Verifier.new();         
        })

        it('Can verifier with correct proof', async function () { 
            let result=await this.contract.verifyTx(proof.proof, proof.inputs);
            assert.equal(result,true, "Cannot verify correct proof");
            
        })

        it('Can verify with incorrect proof', async function () {     
            let inputs= [
                "0x0000000000000000000000000000000000000000000000000000000000000088",
                "0x0000000000000000000000000000000000000000000000000000000000000091"
              ];        
            let result=await this.contract.verifyTx(proof.proof, inputs);
            assert.equal(result,false, "Cannot verify with incorect proof");
        })

        
    });

})